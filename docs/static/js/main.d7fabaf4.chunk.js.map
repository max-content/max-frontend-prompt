{"version":3,"sources":["Styled.js","components/Search.jsx","components/Movie.jsx","components/Nominations.jsx","App.js","components/helpers.js","reportWebVitals.js","index.js"],"names":["Header","styled","header","Container","div","Form","SubmitMe","button","CardGrid","Card","motion","Search","onChange","onSubmitHandler","placeholder","query","className","type","value","onClick","props","title","year","src","poster","alt","children","NomStyle","nav","variants","open","x","closed","transition","delay","slugify","require","API_URL","API_KEY","App","useState","setLoading","movies","setMovies","setQuery","nominations","setNominations","titles","setTitles","errors","setErrors","isOpen","setIsOpen","style","textDecoration","initial","animate","damping","marginLeft","marginTop","marginBottom","ul","map","nomination","li","e","target","axios","get","then","res","console","log","data","undefined","catch","err","match","i","Movie","Title","Poster","Year","length","alert","newMovie","isNominated","imdbID","isAlreadyThere","temp","tempTitles","push","onNominateHandler","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d7fabaf4.chunk.js","sourcesContent":["import styled from '@emotion/styled';\nimport { motion } from 'framer-motion';\n\nexport const Header = styled.header`\n    background: var(--green);\n    color: var(--offWhite);\n    padding: 20px;\n    h1 {\n        color: var(--offWhite);\n        text-shadow: 3px 2px var(--black);\n    }\n`;\n\nexport const Container = styled.div`\n    width: 95%;\n    max-width: 600px;\n    margin: 0 auto;\n    padding-bottom: 60px;\n    h2 {\n        color: var(--green);\n    }\n    div {\n        color: var(--lime);\n    }\n`;\n\nexport const Form = styled.div`\n    margin-left: 100px;\n    padding: 10px;\n    display: flex;\n    align-items: center;\n    input {\n        width: 300px;\n        margin-top: 15px;\n    }\n`;\n\nexport const SubmitMe = styled.button`\n    background-color: var(--darkGreen);\n    color: var(--lime);\n    border: 1px solid var(--white);\n    border-radius: 5px;\n    height: 30px;\n    margin-left: 10px;\n    margin-right: 20px;\n    text-decoration: none;\n    padding: -5px;\n    &:hover {\n        background-color: var(--green);\n        color: var(--offWhite);\n        border: 1px solid var(--black);\n    }\n`;\n\nexport const CardGrid = styled.div`\n    display: flex;\n    flex-wrap: wrap; \n    width: 1500px;\n    margin-left: -400px;\n`;\n\nexport const Card = styled(motion.div)`\n    border-radius: 15px;\n    padding: 15px;\n    margin: 10px;\n    width: max-content;\n    height: calc(max-content + 5px);\n    background-color: var(--darkGreen);\n    box-shadow: 1px 1px 15px rgba(0,0,0,0.4);\n    h1 {\n        color: var(--lime);\n        font-size: 1.5rem;\n    }\n    img {\n        width: 100px;\n    }\n`;","import React from 'react';\nimport { Form, SubmitMe } from '../Styled';\n\nexport default function Search({ onChange, onSubmitHandler, placeholder, query }) {\n    return (\n        <Form>\n            <input\n                className=\"SearchInput\"\n                type=\"text\"\n                onChange={onChange}\n                placeholder={placeholder}\n                value={query} \n            />\n            <SubmitMe onClick={onSubmitHandler}>\n                Search\n            </SubmitMe>\n        </Form>\n    );\n}","import React from 'react';\nimport { Card } from '../Styled';\n\nexport default (props) => {\n\n    return(\n            <Card>\n                <div className=\"flexy\">\n                    <h1>{props.title}</h1>\n                    <p>({props.year})</p>\n                </div>\n                <img src={props.poster} alt={props.title} />\n                {props.children}\n            </Card>\n    )\n}","//styled components specifically for animating the nominated movies\n\nimport { motion } from 'framer-motion';\nimport styled from '@emotion/styled';\n\nexport const NomStyle = styled(motion.nav)`\n    position: fixed;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    width: 25vw;\n    height: 100vh;\n    padding: 35px;\n    background: var(--darkGreen);\n    box-shadow: 3px 3px 50px var(--black);\n    z-index: 10;\n    ul {\n        padding: 0;\n        margin: 0;\n    }\n    li {\n        display: block;\n        text-align: left;\n        padding: 0;\n        margin: 0;\n        font-size: 2rem;\n        color: var(--lime);    \n    }\n`;\n\nexport const variants = {\n    open: { x: 0 },\n    closed: {x: \"-100%\",\n        transition: {\n                delay: 0.2\n        }\n    }\n};\n\nexport const ulVariants = {\n    open: {\n        scale: 1,\n        transition: {\n            staggerChildren: 0.3,\n            delayChildren: 0.05,\n            staggerDirection: 1,\n            when: \"afterChildren\"\n        }\n    },\n    closed: {\n        scale: 1\n    }\n};\n\nexport const liVariants = {\n    open: {\n        y: 0,\n        opacity: 1,\n    },\n    closed: {\n        y: -20, \n        opacity: 0\n    }\n};","import React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { CardGrid, Container, Header, SubmitMe } from './Styled'; //styled components\nimport Search from './components/Search';\nimport Movie from './components/Movie.jsx';\nimport {isAlreadyThere} from './components/helpers';\nimport { NomStyle, variants, ulVariants, liVariants } from './components/Nominations';\n\nconst slugify = require('slugify');\n\nconst API_URL = 'https://www.omdbapi.com/';\nconst API_KEY = 'apikey=15b7ffe4';\nconst API_TYPE = '&type=movie'\n    //for the purposes of this prompt movies only. type can be removed or replaced with series or episode \n    //this works in the api call but for some reason it is still accessing the API \nconst App = () => {\n\n    const [loading, setLoading] = useState(true),\n        [movies, setMovies] = useState([]),\n        [query, setQuery] = useState(''),\n        [nominations, setNominations] = useState([]),\n        [titles, setTitles] = useState([]),\n        [errors, setErrors] = useState(''),\n        [isOpen, setIsOpen] = useState(false); \n        \n    const onSubmitHandler = () => {\n        axios \n        .get(`${API_URL}?s=\"${query}\"&${API_KEY}`)\n        .then(res => {\n            console.log(res);\n            console.log(res.data.Search);\n            console.log(`${API_URL}?s=${query}&${API_KEY}&${API_TYPE}`);\n            console.log(\"I am here\");\n            if(res.data.Search === undefined) {\n                setErrors('This movie is unavailable please try to nominate something else.')\n            } else if(res.data.Search === ''){\n                setErrors('');\n            } else {\n                setMovies(res.data.Search);\n                setLoading(false);\n            }\n            // setMovies(res.data.Search);\n            // setLoading(false);\n        })\n        .catch(err => {\n            console.log(err)\n        });\n    }\n\n    const onNominateHandler = match => {\n        if(nominations.length === 5) {\n            alert(\"You have selected 5 movies\");\n        } else if (isAlreadyThere(match, nominations)){\n            alert(\"You have already nominated this movie\");\n        } else {\n            const temp = [...nominations];\n            const tempTitles = [...titles]\n            temp.push(match);\n            tempTitles.push(match.Title);\n            setNominations(temp);\n            setTitles(tempTitles);\n          } \n    }\n\n    return (\n        <div>\n            <Header>\n                <h1>\n                    The Shoppies Nominations!\n                </h1>\n                 <SubmitMe onClick={() => setIsOpen(true)} style={{textDecoration: \"none\"}}>\n                    Nominations\n                </SubmitMe> \n                <NomStyle \n                    variants={variants}\n                    initial=\"closed\"\n                    animate={isOpen ? \"open\" : \"closed\"}\n                    transition={{damping: 300}}\n                >\n                    <SubmitMe style={{marginLeft: \"-300px\", marginTop: \"-300px\", marginBottom: \"10px\"}} onClick={() => setIsOpen(false)}>\n                        Close\n                    </SubmitMe>\n                    <motion.ul>\n                    {titles.map((nomination) => \n                        <motion.li>{nomination}</motion.li>)}\n                    </motion.ul>\n                </NomStyle>\n            </Header>\n            <Container>\n                    <Search\n                        onChange={e => setQuery(slugify(e.target.value, '+'))}\n                        onSubmitHandler = {onSubmitHandler}\n                        value={query}\n                        placeholder=\"Search\"\n                        />\n                        <div>{errors}</div>\n                    <CardGrid>\n                        <>\n                        {movies.map((match, i) => (\n                                <Movie\n                                    key={i}\n                                    title={match.Title}\n                                    poster={match.Poster} \n                                    year={match.Year} {...movies} >\n                                    <SubmitMe type=\"submit\" \n                                        onClick={e => onNominateHandler(match)}>\n                                        Nominate\n                                    </SubmitMe>\n                                </Movie>\n                            ))}\n                        </>\n                </CardGrid>\n            </Container>\n        </div>\n    )\n}\n\nexport default App;","export function isAlreadyThere(newMovie, movies) {\n    var isNominated = false;\n    for(var i = 0; i < movies.length; i++) {\n        if(newMovie.imdbID === movies[i].imdbID) {\n            isNominated = true;\n        }\n    }\n    return isNominated;\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}